
import tensorflow
import keras
import nltk
import numpy as np
nltk.download('punkt')
nltk.download('stopwords')


import pandas as pd
 
df = pd.read_csv('phishing_email_dataset.csv')

# to remove stop words from the email text

from nltk.corpus import stopwords
from nltk.tokenize import word_tokenize

def remove_stop_words(text):
  text.lower()
  text = word_tokenize(text)
  stop_words = set(stopwords.words('english'))
  text = [word for word in text if word.isalpha() and not word in stop_words]
  return ' '.join(text)

x = df.apply(lambda row: remove_stop_words(row['text']), axis=1)
y = df['is_phishing']

print(x)

# convert the words in email text to tokens

from keras.preprocessing.text import Tokenizer
from keras.utils import pad_sequences
 
max_words = 20000
max_length = 500
 
tokenizer = Tokenizer(num_words=max_words)
tokenizer.fit_on_texts(x)
sequences = tokenizer.texts_to_sequences(x)
x = pad_sequences(sequences, maxlen=max_length)
print(x)

# build a neural network (sequential network) for binary classification

from keras.models import Sequential
from keras.layers import Dense, Flatten
from keras.layers import Embedding
 
model = Sequential() 
model.add(Embedding(max_words, 32, input_length=max_length)) 
model.add(Flatten())
keras.layers.Dropout(rate=0.7)
model.add(Dense(60, activation='relu'))
keras.layers.Dropout(rate=0.65)
model.add(Dense(40, activation='relu'))
model.add(Dense(1, activation='sigmoid'))
model.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy']) 
model.summary()
